#!/usr/bin/env bash
#
#  ██                     ██                ██    ██           ████   ██
# ░██                    ░██               ░██   ░██          ░██░   ░██
# ░██       █████  ██████░██       ██████ ██████ ░██ ██   ██ ██████ ██████
# ░██████  ██░░░██░░██░░█░██████  ██░░░░ ░░░██░  ░██░██  ░██░░░██░ ░░░██░
# ░██░░░██░███████ ░██ ░ ░██░░░██░░█████   ░██   ░██░██  ░██  ░██    ░██
# ░██  ░██░██░░░░  ░██   ░██  ░██ ░░░░░██  ░██   ░██░██  ░██  ░██    ░██
# ░██  ░██░░██████░███   ░██████  ██████   ░░██  ███░░██████  ░██    ░░██
# ░░   ░░  ░░░░░░ ░░░    ░░░░░   ░░░░░░     ░░  ░░░  ░░░░░░   ░░      ░░

hc() {
    herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#5A8E3A'

# startup
nitrogen --restore
setxkbmap -layout "us(basic),ru(winkeys)" -option "grp:rctrl_toggle,numpad:microsoft,grp_led:scroll"
python $HOME/.pulse.py

# remove all existing keybindings
hc keyunbind --all

# keybindings
Mod=Mod4

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Alt-r reload
hc keybind $Mod-w close

# term
hc keybind $Mod-Return spawn alacritty

# launcher
hc keybind $Mod-d spawn rofi -show run

# screenshot
hc keybind $Mod-Print spawn python $HOME/.scr.py

# thunar
hc keybind $Mod-a spawn thunar

# steam
hc keybind $Mod-s spawn steam

# qutebrowser
hc keybind $Mod-q spawn qutebrowser

# config manager
hc keybind $Mod-m spawn alacritty --hold -e python $HOME/.confmanager.py

# power manager
hc keybind $Mod-x spawn alacritty --hold -e python $HOME/.power.py

# volume
hc keybind XF86AudioRaiseVolume spawn $HOME/.bin/s u
hc keybind XF86AudioLoverVolume spawn $HOME/.bin/s d
hc keybind XF86AudioMute spawn pactl set-sink-mute 0 toggle

# info
hc keybind $Mod-i spawn notify-send "$($HOME/.bin/t)"

# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-d set_attr clients.focus.decorated toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
hc keybind $Mod-Control-m jumpto last-minimized
hc keybind $Mod-p pseudotile toggle

hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme

hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

#frame
hc set frame_border_active_color '#565050'
hc set frame_border_normal_color '#2a2a2a'
hc set frame_bg_normal_color '#ede6e3'
hc set frame_bg_active_color '#ede6e3'

hc set frame_border_width 3
hc set always_show_frame on
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 8
hc set frame_padding 0
hc set smart_frame_surroundings on

hc set snap_gap 8
sc set snap_distance 10

# window

hc attr theme.active.color '#565050'
hc attr theme.normal.color '#2a2a2a'
hc attr theme.urgent.color orange
hc attr theme.inner_width 0
hc attr theme.inner_color '#2a2a2a'
hc attr theme.border_width 0
hc attr theme.floating.border_width 3
hc attr theme.floating.outer_width 8
hc attr theme.floating.outer_color '#2a2a2a'
hc attr theme.active.outer_color '#2a2a2a'
hc attr theme.floating.inner_width 0
hc attr theme.floating.inner_color '#565050'
hc attr theme.active.inner_color '#ce9c85'
hc attr theme.background_color '#2a2a2a'

hc set window_gap 2
hc set smart_window_surroundings on
hc set mouse_recenter_gap 0
hc set raise_on_focus 0
hc set update_dragged_clients 1

# rules
hc unrule -F

hc rule focus=on
hc rule floatplacement=center
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done

hc auto_detect_monitors